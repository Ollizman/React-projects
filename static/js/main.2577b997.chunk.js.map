{"version":3,"sources":["speedgame/Box.js","speedgame/GameOver.js","speedgame/Speedgame.js","Buttons.js","counter/Counter.js","actions.js","memorygame/Card.js","memorygame/MemorygameOver.js","memorygame/Memorygame.js","typinggame/useSpeedTyping.js","typinggame/RandomWords.js","typinggame/TypinggameUI.js","typinggame/Typinggame.js","Forms/FormComponent.js","Forms/FormPrac2.js","Meme/Header.js","Meme/MemeGenerator.js","Meme/MemeApp.js","App.js","store/reducers/counter.js","store/reducers/results.js","index.js"],"names":["Box","props","className","color","active","onClick","click","GameOver","console","log","id","score","reFresh","colors","activeQueue","Speedgame","state","isGameOn","scoreFlasher","activeBox","undefined","pace","gameOver","missclicks","beginning","setState","flash","push","length","stopGame","next","Math","floor","random","flashTimer","setTimeout","timer","bind","scoreFlash","clickHandler","scoreFlashtimer","splice","missclick","startGame","clearTimeout","this","Component","Button","styled","button","primary","css","counter","Counter","checkNumber","ctr","onIncCounter","onDecCounter","onAddCounter","onRemCounter","onDeleteCounter","onStoreCounter","results","reset","map","item","key","value","connect","res","dispatch","type","result","resultElementId","React","memo","Card","defaultProps","name","url","activeStyle","src","alt","style","borderRadius","prevProps","nextProps","found","MemorygameOver","missmatches","to","animals","Memorygame","animal","secondClickName","prevState","ani","handleEndOfTurn","firstClickName","compareCards","hit","animalName","matches","shuffle","array","temporaryValue","randomIndex","currentIndex","CardsToRender","animalsToState","reduce","acc","index","useSpeedTyping","useState","text","setText","timeCounter","setTimeCounter","start","setStart","words","setWords","chars","setChars","setColor","setGameOver","textRef","useRef","useEffect","randCol","wordCount","str","trim","split","filter","word","alert","current","disabled","focus","handleChange","e","target","changeTimer","ON","OFF","ERROR_MSG","RandomWords","randWords","setRandWords","showRandWords","setShowRandWords","fetch","then","response","json","catch","error","textAlign","display","height","background","fontFamily","fontWeight","TypinggameUI","ref","placeholder","onChange","Typinggame","FormPrac2","onSubmit","handleSubmit","data","firstName","lastName","age","checked","gender","destination","diets","vegetarian","vegan","meatlover","lactose","event","preventDefault","FormComponent","Header","MemeGenerator","topText","bottomText","randomImg","allMemeImgs","randInt","componentDidMount","memes","changeHandler","render","maxLength","MemeApp","App","home","about","projects","match","path","project","params","nav","exact","component","initialState","counterReducer","action","resultsReducer","concat","Date","rootReducer","combineReducers","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2577b997.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Box.css\";\n\nconst Box = props => {\n  return (\n    <div\n      className={\n        \"box \" + props.color + (props.active === true ? \" active\" : \"\")\n      }\n      onClick={props.click}\n    ></div>\n  );\n};\n\nexport default Box;\n","import React from \"react\";\nimport \"./GameOver.css\";\n\nconst GameOver = props => {\n  console.log(props);\n  return (\n    <div id=\"overlay\">\n      <div className=\"gameoverbox\">\n        <p>Game over!! Your final score is: {props.score}</p>\n        <button id=\"closeButton\" onClick={() => props.reFresh()}>\n          {\" \"}\n          Close{\" \"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default GameOver;\n","import React, { Component } from \"react\";\nimport \"./Speedgame.css\";\nimport Box from \"./Box\";\nimport GameOver from \"./GameOver\";\nconst colors = [\"green\", \"yellow\", \"red\", \"blue\"];\nlet activeQueue = [];\nconst ON = 1;\nconst OFF = 0;\n\nclass Speedgame extends Component {\n  state = {\n    isGameOn: OFF,\n    score: 0,\n    scoreFlasher: 0,\n    activeBox: undefined,\n    pace: 1700,\n    gameOver: false,\n    missclicks: 0\n  };\n\n  beginning = () => {\n    console.log(\"toimii\");\n    activeQueue = [];\n    this.setState({\n      isGameOn: OFF,\n      score: 0,\n      scoreFlasher: 0,\n      activeBox: undefined,\n      pace: 1700,\n      gameOver: false,\n      missclicks: 0\n    });\n  };\n\n  flash = () => {\n    activeQueue.push(this.state.activeBox);\n    if (activeQueue.length >= 10) {\n      this.stopGame();\n    }\n    //asettaa activeboxin arvoon undefined,\n    this.setState({ activeBox: undefined });\n    console.log(\"Jono: \" + activeQueue);\n  };\n\n  next = () => {\n    //arpoo uuden aktiivisen\n    this.setState({ activeBox: Math.floor(Math.random() * 4) });\n\n    // käynnistää flash metodin 150ms päästä joka muuttaa activeboxin takaisin undefined ja lisää flashanneen jonoon muistiin.\n    this.flashTimer = setTimeout(this.flash, 150);\n\n    //ehtolauseet pelin nopeudelle, pace staten arvoa muuttamalla.\n    if (this.state.pace > 800) {\n      this.setState({ pace: this.state.pace * 0.97 });\n    } else if (this.state.pace > 600) {\n      this.setState({ pace: this.state.pace * 0.98 });\n    } else if (this.state.pace > 480) {\n      this.setState({ pace: this.state.pace * 0.991 });\n    } else {\n      this.setState({ pace: this.state.pace * 0.997 });\n    }\n    console.log(this.state.pace);\n\n    this.timer = setTimeout(this.next.bind(), this.state.pace);\n  };\n\n  scoreFlash = () => {\n    this.setState({ scoreFlasher: 0 });\n  };\n\n  clickHandler = () => {\n    console.log(\"painettu oikein\");\n    this.setState({ scoreFlasher: 1 });\n    this.setState({ score: this.state.score + 1 });\n    this.scoreFlashtimer = setTimeout(this.scoreFlash, 100);\n    activeQueue.splice(0, 1);\n  };\n  missclick = () => {\n    //play voice\n    this.setState({ scoreFlasher: 2 });\n    this.setState({ score: this.state.score - 1 });\n    this.scoreFlashtimer = setTimeout(this.scoreFlash, 100);\n    this.setState({ missclicks: this.state.missclicks + 1 });\n    if (this.state.missclicks >= 3) {\n      this.stopGame();\n    }\n  };\n\n  startGame = () => {\n    if (this.state.isGameOn === ON) {\n      return;\n    } else {\n      this.setState({ isGameOn: ON });\n    }\n    this.next();\n  };\n  stopGame = () => {\n    clearTimeout(this.timer);\n    clearTimeout(this.flash);\n    this.setState({ gameOver: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Speedtest 2.7</h1>\n        <Box\n          color={colors[0]}\n          active={this.state.activeBox === 0}\n          click={activeQueue[0] === 0 ? this.clickHandler : this.missclick}\n        />\n        <Box\n          color={colors[1]}\n          active={this.state.activeBox === 1}\n          click={activeQueue[0] === 1 ? this.clickHandler : this.missclick}\n        />\n        <Box\n          color={colors[2]}\n          active={this.state.activeBox === 2}\n          click={activeQueue[0] === 2 ? this.clickHandler : this.missclick}\n        />\n        <Box\n          color={colors[3]}\n          active={this.state.activeBox === 3}\n          click={activeQueue[0] === 3 ? this.clickHandler : this.missclick}\n        />\n\n        <div>\n          <div\n            className={\n              this.state.scoreFlasher === 1\n                ? \"score green\"\n                : this.state.scoreFlasher === 2\n                ? \"score red\"\n                : \"score\"\n            }\n          >\n            {this.state.score}\n          </div>\n        </div>\n\n        <div>\n          <button onClick={this.startGame}>Start!</button>\n          <button onClick={this.stopGame}>Stop!</button>\n        </div>\n\n        {this.state.gameOver && (\n          <GameOver score={this.state.score} reFresh={this.beginning} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Speedgame;\n","import styled, { css } from \"styled-components\";\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 15px;\n  border: 3px solid darkgreen;\n  color: lightgreen;\n  margin: 0 1em;\n  padding: 0.25em 1em;\n\n  ${props =>\n    props.primary &&\n    css`\n      border-radius: 7px;\n      border: 2px solid darkgreen;\n      color: white;\n      font-weight: bold;\n      width: 120px;\n    `};\n  ${props =>\n    props.counter &&\n    css`\n      border: hidden;\n      border-radius: 50px;\n      color: black;\n    `};\n`;\nexport { Button };\n","import React, { Component } from \"react\";\nimport \"./CounterHook.css\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../actions\";\nimport { Button } from '../Buttons';\n\nclass Counter extends Component {\n  checkNumber = () => {\n    let color = \"\";\n    this.props.ctr === 0\n      ? (color = \"grey\")\n      : this.props.ctr % 10 === 0\n      ? (color = \"yellow\")\n      : this.props.ctr % 2 === 0\n      ? (color = \"even\")\n      : (color = \"odd\");\n    return color;\n  };\n\n  render() {\n    const {\n      ctr,\n      onIncCounter,\n      onDecCounter,\n      onAddCounter,\n      onRemCounter,\n      onDeleteCounter,\n      onStoreCounter,\n      results,\n      reset\n    } = this.props;\n\n    return (\n      <div className={\"counter \" + this.checkNumber()}>\n        <p>Hello world! </p>\n        <p>You clicked {ctr} times!!</p>\n        <Button counter onClick={onIncCounter}>Add</Button>\n        <Button counter onClick={onDecCounter}>Decrease</Button>\n        <Button counter onClick={onAddCounter}>add 5</Button>\n        <Button counter onClick={onRemCounter}>remove 5</Button>\n        <Button counter onClick={reset}>Reset</Button>\n        <Button counter onClick={() => onStoreCounter(ctr)}>Store</Button>\n        <ul>\n          {results.map(item => (\n            <li key={item.id} onClick={() => onDeleteCounter(item.id)}>\n              {item.value}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ctr: state.ctr.counter,\n    results: state.res.results\n  };\n};\n\nconst mapDispatchtoProps = dispatch => {\n  const {\n    INCREMENT,\n    DECREMENT,\n    ADD,\n    REMOVE,\n    RESET,\n    STORE_RESULT,\n    DELETE_RESULT\n  } = actionTypes;\n  return {\n    onIncCounter: () => dispatch({ type: INCREMENT }),\n    onDecCounter: () => dispatch({ type: DECREMENT }),\n    onAddCounter: () => dispatch({ type: ADD, value: 5 }),\n    onRemCounter: () => dispatch({ type: REMOVE, value: 5 }),\n    reset: () => dispatch({ type: RESET }),\n    onStoreCounter: result => dispatch({ type: STORE_RESULT, result: result }),\n    onDeleteCounter: id =>\n      dispatch({ type: DELETE_RESULT, resultElementId: id })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(Counter);\n","export const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const ADD = 'ADD';\nexport const REMOVE = 'REMOVE';\nexport const RESET = 'RESET';\nexport const STORE_RESULT = 'STORE_RESULT';\nexport const DELETE_RESULT = 'DELETE_RESULT';\n\n","import React from \"react\";\nimport \"./Cards.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Card(props) {\n  Card.defaultProps = {\n    name: \"\",\n    url: \"\",\n    active: false\n  };\n\n  Card.propTypes = {\n    //setting accepted prop types and that the prop is required for active prop.\n    active: PropTypes.bool.isRequired,\n    name: PropTypes.string\n  };\n\n  const { url, name, click, active } = props;\n  console.log(\"rendered: \", name);\n  const Image = () =>\n    active ? (\n      <img src={url} alt={name} style={{ borderRadius: \"20%\" }} />\n    ) : (\n      <div />\n    );\n\n  const activeStyle = active ? \"active\" : \"\";\n\n  return (\n    <div className={\"card \" + activeStyle} onClick={click}>\n      <Image />\n    </div>\n  );\n}\nfunction areEqual(prevProps, nextProps) {\n  const { found, active } = nextProps;\n  if (found === 1 || active === prevProps.active) {\n    return true;\n  }\n  return false;\n}\n\nexport default React.memo(Card, areEqual);\n","import React from \"react\";\nimport \"./MemorygameOver.css\";\nimport { Link } from \"react-router-dom\";\n\nconst MemorygameOver = props => {\n  console.log(props);\n  return (\n    <div id=\"overlay\">\n      <div className=\"gameoverbox\">\n        <h3>Completed! You Matched em all! </h3>\n        <p>..with {props.missmatches} missmatches! =) </p>\n        <Link to=\"/projects\">\n          <button id=\"closeButton\"> Close </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default MemorygameOver;\n","import React, { Component } from \"react\";\nimport \"./Memorygame.css\";\nimport Card from \"./Card\";\nimport MemorygameOver from \"./MemorygameOver\";\n\nconst IMG_BASE_URL = \"https://cdn.pixabay.com/photo/\";\nconst FOUND = 1;\nconst NOTFOUND = 0;\n\nconst animals = [\n  {\n    name: \"dog\",\n    url: \"2018/03/31/06/31/dog-3277417__340.jpg\"\n  },\n  {\n    name: \"cat\",\n    url: \"2017/04/30/18/33/cat-2273598__340.jpg\"\n  },\n  {\n    name: \"horse\",\n    url: \"2017/10/31/07/49/horses-2904536__340.jpg\"\n  },\n  {\n    name: \"snake\",\n    url: \"2014/04/03/11/55/snake-312561__340.png\"\n  },\n  {\n    name: \"elephant\",\n    url: \"2016/05/28/08/32/elephant-1421167_960_720.jpg\"\n  },\n  {\n    name: \"mouse\",\n    url: \"2016/10/01/19/20/mouse-1708177__340.jpg\"\n  },\n  {\n    name: \"lion\",\n    url: \"2019/11/06/06/00/lion-4605253__340.jpg\"\n  },\n  {\n    name: \"giraffe\",\n    url: \"2018/10/28/11/18/giraffe-3778536__340.jpg\"\n  }\n];\n\nclass Memorygame extends Component {\n  constructor(props) {\n    super(props);\n    const animalsToState = animals.reduce((acc, animal, index) => {\n      let newAnimals = [\n        ...acc,\n        {\n          id: index,\n          name: animal.name,\n          found: NOTFOUND,\n          active: false,\n          url: IMG_BASE_URL + animal.url\n        },\n        {\n          id: 999 + index,\n          name: animal.name,\n          found: NOTFOUND,\n          active: false,\n          url: IMG_BASE_URL + animal.url\n        }\n      ];\n      return newAnimals;\n    }, []);\n\n    this.state = {\n      animals: animalsToState,\n      firstClickName: \"\",\n      secondClickName: \"\",\n      click: 1,\n      missmatches: 0,\n      matches: 0\n    };\n    this.shuffle(this.state.animals);\n  }\n\n  clickHandler = animal => {\n    const { id, name, found, active } = animal;\n    const { click, secondClickName } = this.state;\n    // if the animal is paired, the found substate has been changed to 'FOUND' (=1)\n    if (found === FOUND || active === true || secondClickName !== \"\") {\n      return;\n    }\n\n    this.setState(prevState => ({\n      animals: prevState.animals.map(ani =>\n        ani.id === id ? { ...ani, active: true } : ani\n      )\n    }));\n    if (click === 1) {\n      this.setState({\n        firstClickName: name,\n        click: 2\n      });\n      return;\n    } else {\n      //..click === 2 ..\n      this.setState({\n        secondClickName: name,\n        click: 1\n      });\n      setTimeout(this.handleEndOfTurn, 750);\n    }\n  };\n\n  compareCards = () => {\n    const { missmatches, firstClickName, secondClickName } = this.state;\n    firstClickName === secondClickName\n      ? this.hit(firstClickName)\n      : this.setState({ missmatches: missmatches + 1 });\n  };\n\n  handleEndOfTurn = () => {\n    this.compareCards();\n    this.setState(prevState => ({\n      animals: prevState.animals.map(ani =>\n        ani.found !== FOUND && ani.active === true\n          ? { ...ani, active: false }\n          : ani\n      ),\n      firstClickName: \"\",\n      secondClickName: \"\" //Clickhandler function is not working if this is not set to ''\n    }));\n  };\n\n  hit = animalName => {\n    const name = animalName;\n    const { matches } = this.state;\n\n    this.setState(prevState => ({\n      animals: prevState.animals.map(ani =>\n        ani.name === name ? { ...ani, found: FOUND } : ani\n      ),\n      matches: matches + 1 //since this reaches value of 8, pops up the GameOver Component\n    }));\n  };\n\n  shuffle = array => {\n    //shuffles the element order in the given array!\n    let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  CardsToRender = () =>\n    this.state.animals.map(animal => (\n      <Card\n        key={animal.id}\n        url={animal.url}\n        name={animal.name}\n        found={animal.found}\n        active={animal.active}\n        click={() => this.clickHandler(animal)}\n      />\n    ));\n\n  render() {\n    const { matches, missmatches } = this.state;\n    return (\n      <div className=\"grid-container\">\n        <div className=\"wrapper\">{this.CardsToRender()}</div>\n        {matches === 8 && <MemorygameOver missmatches={missmatches} />}\n      </div>\n    );\n  }\n}\nexport default Memorygame;\n","import { useState, useEffect, useRef } from \"react\";\n\nconst ON = true;\nconst OFF = false;\nconst TIMER = 30; // starting time\n\nconst useSpeedTyping = () => {\n  const [text, setText] = useState(\"\");\n  const [timeCounter, setTimeCounter] = useState(TIMER);\n  const [start, setStart] = useState(OFF);\n  const [words, setWords] = useState(0);\n  const [chars, setChars] = useState(0);\n  const [color, setColor] = useState(\"\");\n  const [gameOver, setGameOver] = useState(true);\n  const textRef = useRef(null);\n\n  const handleChange = e => {\n    const value = e.target.value;\n    setText(value);\n    setChars(value.length);\n    setWords(wordCount(text));\n  };\n\n  useEffect(() => {\n    if (!start) return;\n\n    if (timeCounter > 0) {\n      setTimeout(() => {\n        setTimeCounter(prevState => prevState - 1);\n      }, 1000);\n    }\n    timeCounter > 4\n      ? setColor(randCol)\n      : timeCounter > 0\n      ? setColor(\"yellow\")\n      : setGameOver(true);\n  }, [start, timeCounter]);\n\n  const randCol = () => {\n    const colors = [\"green\", \"red\", \"blue\", \"white\", \"yellow\"];\n    return colors[Math.floor(Math.random() * 5)];\n  };\n\n  const wordCount = str => {\n    const wordsArr = str.trim().split(\" \");\n    return wordsArr.filter(word => {\n      return word !== \"\" && word.length > 1;\n    }).length;\n  };\n\n  const changeTimer = () =>\n    timeCounter === 60 ? setTimeCounter(30) : setTimeCounter(60);\n\n  const startGame = () => {\n    setStart(ON);\n    setGameOver(false);\n    setText(\"\");\n    setWords(0);\n    textRef.current.disabled = false;\n    textRef.current.focus();\n  };\n\n  const stopGame = () => {\n    if (!gameOver || !start) return;\n    setStart(OFF);\n    setTimeout(() => {\n      setTimeCounter(TIMER);\n      alert(`You wrote ${words} words in ${TIMER} seconds!\n      ..and includes total of ${chars} characters (incl.spaces)`);\n    }, 999);\n  };\n\n  useEffect(stopGame, [gameOver]);\n\n  return {\n    text,\n    timeCounter,\n    start,\n    words,\n    color,\n    gameOver,\n    setGameOver,\n    startGame,\n    handleChange,\n    changeTimer,\n    ON,\n    OFF,\n    textRef\n  };\n};\n\nexport default useSpeedTyping;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Typinggame.css\";\nimport { Button } from \"../Buttons\";\n\nconst BASE_API_URL = \"https://random-word-api.herokuapp.com/\";\nconst API_KEY = \"62URKTA8\";\nconst ERROR_MSG =\n  \"Api key must be updated first in the code.. Use your imagination to imagine here some random words and use them instead. Or maybe not imagine the words here at all, just imagine them in your mind and push them away to the screen through your fingers!\";\n\nconst RandomWords = () => {\n  const [randWords, setRandWords] = useState([]);\n  const [showRandWords, setShowRandWords] = useState(false);\n\n  useEffect(() => {\n    if (!showRandWords) return;\n    fetch(`${BASE_API_URL}/word?key=${API_KEY}&number=200`)\n      .then(response => response.json())\n      .then(response => {\n        if (response === \"wrong API key\") {\n          setRandWords(`Sorry! ${response} --${ERROR_MSG}`);\n        }\n      })\n      .catch(error => {\n        setRandWords(`Sorry! ${error} --${ERROR_MSG}`);\n      });\n  }, [showRandWords]);\n\n  return (\n    <>\n      <Button\n        onClick={() =>\n          !showRandWords ? setShowRandWords(true) : setShowRandWords(false)\n        }\n        style={{ textAlign: \"left\", display: \"flex\" }}\n      >\n        {!showRandWords ? \"Get\" : \"Hide\"} example words!\n      </Button>\n      <textarea\n        name=\"randWords\"\n        style={{\n          display: !showRandWords ? \"none\" : \"\",\n          height: \"110px\",\n          background: \"white\",\n          fontFamily: \"arial\",\n          fontWeight: \"bold\"\n        }}\n        disabled={true}\n        value={randWords}\n      />\n    </>\n  );\n};\nexport default RandomWords;\n","import React from \"react\";\nimport useSpeedTyping from \"./useSpeedTyping\";\nimport \"./Typinggame.css\";\nimport RandomWords from \"./RandomWords\";\nimport { Button } from \"../Buttons\";\n\nconst TypinggameUI = () => {\n  const {\n    text,\n    timeCounter,\n    start,\n    words,\n    color,\n    gameOver,\n    setGameOver,\n    startGame,\n    handleChange,\n    changeTimer,\n    ON,\n    OFF,\n    textRef\n  } = useSpeedTyping();\n\n  return (\n    <div className=\"Typinggame\">\n      <h1>Speed Typing game</h1>\n      <textarea\n        ref={textRef}\n        placeholder='Start typing after clicking \"start\" button!!'\n        value={text}\n        name=\"text\"\n        onChange={handleChange}\n        disabled={gameOver}\n      />\n      <h4>Word count: {words}</h4>\n      <h4 style={{ color: !gameOver ? color : \"#ff4444\" }}>\n        Time left: {timeCounter}\n      </h4>\n      <button className=\"button\" onClick={startGame} disabled={start === ON}>\n        Start\n      </button>\n      <button\n        className=\"button\"\n        onClick={() => setGameOver(true)}\n        disabled={start === OFF}\n      >\n        Stop\n      </button>{\" \"}\n      <br />\n      <Button primary onClick={changeTimer} disabled={start === ON}>\n        30/60\n      </Button>\n      <RandomWords />\n    </div>\n  );\n};\nexport default TypinggameUI;\n","import React from \"react\";\nimport TypinggameUI from \"./TypinggameUI\";\n\nconst Typinggame = () => {\n  return (\n    <>\n      <TypinggameUI />\n    </>\n  );\n};\n\nexport default Typinggame;\n","import React from \"react\"\n/**\n * Challenge: Wire up the partially-finished travel form so that it works!\n * Remember to use the concept of controlled forms\n * https://reactjs.org/docs/forms.html\n * \n * All information should be populating the text below the form in real-time\n * as you're filling it out\n * \n * This exercise is adapted from the V School curriculum on vanilla JS forms:\n * https://coursework.vschool.io/travel-form/\n * \n * All of our challenges and learning resources are open for the public\n * to play around with and learn from at https://coursework.vschool.io\n */\n\nfunction FormPrac2(props) { \n                \n        return (\n            <main>\n                <form onSubmit={props.handleSubmit}>\n                    <input placeholder=\"First Name\" \n                        onChange={props.handleChange}\n                        name= 'firstName'\n                        value= {props.data.firstName}                        \n                        /><br />\n\n                    <input placeholder=\"Last Name\" \n                        onChange={props.handleChange}\n                        name= 'lastName'\n                        value= {props.data.lastName}  \n                    /><br />\n\n                    <input placeholder=\"Age\" \n                        onChange={props.handleChange}\n                        name= 'age'\n                        value= {props.data.age}\n                    /><br />\n                    <label>\n                    <input\n                        type='radio'\n                        onChange={props.handleChange}\n                        name= 'gender'\n                        value= 'male'\n                        checked= {props.data.gender === 'male'}\n                    /> Male\n                    </label>\n                    <label>\n                    <input \n                        type='radio'\n                        onChange={props.handleChange}\n                        name= 'gender'\n                        value= 'female'\n                        checked= {props.data.gender === 'female'}\n                    /> Female\n                    </label>\n                    {/* Create radio buttons for gender here */}\n                    <br />\n                    <select name='destination' onChange={props.handleChange} value={props.data.destination}>\n                        <option> --select-- </option>\n                        <option> Europe </option>\n                        <option> Asia </option>\n                        <option> Australia </option>\n                        <option> Central America </option>\n                    </select>\n                    {/* Create select box for location here */}\n                    <br />\n                    \n                    \n                        <label>\n                           <input\n                           type='checkbox' \n                           name='vegetarian' \n                           checked= {props.data.diets.vegetarian}\n                           onChange={props.handleChange}\n                           /> Vegetarian\n                        </label>\n                        <label>\n                           <input\n                           type='checkbox' \n                           name='vegan' \n                           checked= {props.data.diets.vegan}\n                           onChange={props.handleChange}\n                           /> Vegan\n                        </label>\n                        <label>\n                           <input\n                           type='checkbox' \n                           name='meatlover' \n                           checked= {props.data.diets.meatlover}\n                           onChange={props.handleChange}\n                           /> Meat-Lover\n                        </label>\n                        <label>\n                           <input\n                           type='checkbox' \n                           name='lactose' \n                           checked= {props.data.diets.lactose}\n                           onChange={props.handleChange}\n                           /> Lactose\n                        </label>\n                       \n                  \n                     \n                 \n                    {/* Create check boxes for dietary restrictions here */}\n                    <br />\n                    \n                    <button>Submit</button>\n                </form>\n                <hr />\n                <h2>Entered information:</h2>\n                <p>Your name: {props.data.firstName + ' ' + props.data.lastName}</p>\n                <p>Your age: {props.data.age}</p>\n                <p>Your gender: {props.data.gender}</p>\n                <p>Your destination: {props.data.destination}</p>\n                <p>\n                    Your dietary restrictions: <br />\n                    {props.data.diets.vegetarian && 'Vegetarian - '}\n                    {props.data.diets.vegan && 'Vegan - '} \n                    {props.data.diets.meatlover && 'Meat-Lover - '} \n                    {props.data.diets.lactose && 'Lactose-handicap'} \n                </p>\n            </main>\n        )\n    }\n\n\nexport default FormPrac2","import React, { Component } from \"react\"\nimport FormComponent from './FormComponent'\n\nclass FormPrac2 extends Component {\n    constructor() {\n        super()\n        this.state = {\n            firstName: '',\n            lastName: '',\n            age: undefined,\n            gender: '',\n            destination: '',\n            diets: {\n                vegetarian: false,\n                vegan: false,\n                meatlover: false,\n                lactose: false\n            }\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    handleChange = (event) => {\n        const { name, value, type, checked } = event.target\n        type === 'checkbox' ? this.setState(prevState => {\n            return {\n                diets: {\n                    ...prevState.diets,\n                    [name]: checked\n                }\n            }\n        }) :\n            this.setState({\n                [name]: value\n            })\n    }\n    handleSubmit = (event) => {\n        alert('Form was submitted, thanks: ' + this.state.firstName)\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <FormComponent \n            handleChange = {this.handleChange}\n            handleSubmit = {this.handleSubmit}\n            data = {this.state} />\n        )\n    }\n}\n\nexport default FormPrac2","import React from 'react'\nimport './styles.css'\n\nfunction Header(){\n    return(\n        <header>\n            <img\n                src=\"https://cdn.pixabay.com/photo/2013/07/12/19/15/gangster-154425_960_720.png\"\n                alt=\"mememan\"\n                style= {{height: \"80px\"}}\n                />\n                <p>MEME GENERATOR</p> \n        </header>\n    )\n}\nexport default Header","import React, { Component } from \"react\";\n\nclass MemeGenerator extends Component {\n  state = {\n    topText: \"\",\n    bottomText: \"\",\n    randomImg: \"\",\n    allMemeImgs: []\n  };\n\n  clickHandler = event => {\n    event.preventDefault();\n    const randInt = Math.floor(Math.random() * this.state.allMemeImgs.length);\n    this.setState({\n      randomImg: this.state.allMemeImgs[randInt].url\n    });\n  };\n\n  componentDidMount = () => {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then(response => response.json())\n      .then(response => {\n        const { memes } = response.data;\n        this.setState({\n          allMemeImgs: memes\n        });\n      });\n  };\n\n  changeHandler = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render = () => {\n    return (\n      <div>\n        <form className=\"meme-form\" onSubmit={this.clickHandler}>\n          <input\n            name=\"topText\"\n            placeholder=\"Write top text\"\n            onChange={this.changeHandler}\n            value={this.state.topText}\n            maxLength=\"50\"\n          />\n\n          <input\n            name=\"bottomText\"\n            placeholder=\"Write bottom text\"\n            onChange={this.changeHandler}\n            value={this.state.bottomText}\n            maxLength=\"60\"\n          />\n\n          <button>Gen</button>\n        </form>\n        <div className=\"meme\">\n          <img\n            src={this.state.randomImg}\n            alt=\"Press Gen button to generate!!\"\n          />\n          <h2 className=\"top\">{this.state.topText}</h2>\n          <h2 className=\"bottom\">\n            {this.state.bottomText.length > 50\n              ? \"Sorry! Too long text!\"\n              : this.state.bottomText}\n          </h2>\n        </div>\n      </div>\n    );\n  };\n}\nexport default MemeGenerator;\n","import React, {Component} from 'react'\nimport Header from './Header'\nimport MemeGenerator from './MemeGenerator'\n\nclass MemeApp extends Component {\n\n    render() {\n        return (\n            <div>\n                <Header />\n                <MemeGenerator />\n            </div>\n        )\n    }\n}\nexport default MemeApp","import React, { Component } from \"react\";\nimport \"./App.css\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Speedgame from \"./speedgame/Speedgame\";\nimport Counter from \"./counter/Counter\";\nimport Memorygame from \"./memorygame/Memorygame\";\nimport Typinggame from \"./typinggame/Typinggame\";\nimport FormPrac2 from \"./Forms/FormPrac2\";\nimport MemeApp from \"./Meme/MemeApp\";\nimport { Button } from \"./Buttons\";\n\nclass App extends Component {\n  home = () => {\n    return (\n      <>\n        <h2>Home</h2>\n        <p>\n          In this page there are some projects, that i have done during my\n          studies of React programming\n        </p>\n      </>\n    );\n  };\n  about = () => {\n    return (\n      <>\n        <h2>About</h2>\n        <ul>\n          <li>\n            <h4>Memorygame : </h4>\n            Löydä 8 eläinparia mahdollisimman vähillä yrityksillä! <br />\n            Optimoitu renderöintiä React Memo():n avulla\n          </li>\n          <li>\n            <h4>SpeedTyping : </h4>\n            Testaa kirjoitusnopeutesi! <br />\n            Tehty Hookeilla. Laskee kirjoitetut sanat ja kirjaimet\n            kovakoodatun(30sec / 60sec) ajan sisällä\n          </li>\n          <li>\n            <h5>Counter: </h5>\n            tehty Hookseilla sekä käyttäen Redux kirjastoa state hallintaan.\n          </li>\n          <li>\n            <h5> Speedgame: </h5>\n            alkuvaiheen projekti.\n          </li>\n          <li>\n            <h5> Form pracs: </h5>\n            Testailtu formien tekemistä Reactilla.\n          </li>\n          <li>\n            <h5>Meme Generator: </h5>\n            Rajapinnasta haettuja meemejä renderöidään näytölle satunnaisesti\n            tekstin kera.\n          </li>\n        </ul>\n      </>\n    );\n  };\n\n  projects = ({ match }) => {\n    return (\n      <div className=\"project-container\">\n        <h2> Projects </h2>\n        <p>\n          <Link to={`${match.url}/counter`}>\n            <Button>Contergame</Button>\n          </Link>\n          <Link to={`${match.url}/speedgame`}>\n            <Button>Speedgame 2.7</Button>\n          </Link>\n          <Link to={`${match.url}/memorygame`}>\n            <Button>Memorygame</Button>\n          </Link>\n        </p>\n        <p>\n          <Link to={`${match.url}/formprac2`}>\n            <Button>Form Practise</Button>\n          </Link>\n          <Link to={`${match.url}/meme`}>\n            <Button>Meme Generator</Button>\n          </Link>\n          <Link to={`${match.url}/Speedtyping`}>\n            <Button>Speed Typing</Button>\n          </Link>\n        </p>\n\n        <div className=\"projects\">\n          <Route\n            path={`${match.path}/:name`}\n            render={props => <this.project {...props} />}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  project = ({ match }) => {\n    return (\n      <>\n        <p>This is my project {match.params.name}</p>\n        {match.params.name === \"speedgame\" ? (\n          <Speedgame />\n        ) : match.params.name === \"memorygame\" ? (\n          <Memorygame />\n        ) : match.params.name === \"counter\" ? (\n          <Counter />\n        ) : match.params.name === \"formprac2\" ? (\n          <FormPrac2 />\n        ) : match.params.name === \"meme\" ? (\n          <MemeApp />\n        ) : match.params.name === \"Speedtyping\" ? (\n          <Typinggame />\n        ) : (\n          <div />\n        )}\n      </>\n    );\n  };\n  nav = () => {\n    return (\n      <div className=\"nav\">\n        <nav>\n          <Link to=\"/\">\n            <Button primary>Home</Button>\n          </Link>\n\n          <Link to=\"/about\">\n            <Button primary>About</Button>\n          </Link>\n\n          <Link to=\"/projects\">\n            <Button primary>Projects</Button>\n          </Link>\n        </nav>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Router>\n          {this.nav()}\n\n          <Switch>\n            <Route exact path=\"/\" component={this.home} />\n\n            <Route path=\"/about\" component={this.about} />\n\n            <Route path=\"/projects\" component={this.projects} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\nexport default App;\n\n/*\n    <Switch>\n      <Route path={`${match.url}/counter`} component={Counter} />\n\n      <Route path={`${match.url}/speedgame`} component={Speedgame} />\n\n      <Route path={`${match.url}/portfolio`} component={Portfolio} />\n\n    </Switch>\n\n          <Route\n      path = {`${match.path}/:name`}\n      render={match.params.name === 'counter' ? ({ match }) => (\n        <div>\n          {' '}\n          <h3> {match.params.name} </h3>\n            <Counter />\n\n          </div>\n      ):  ({ match }) => (\n      <div>\n\n          <h3> {match.params.name} </h3>\n            <Speedgame />\n\n          </div>\n      )\n    }\n     />\n*/\n","import * as actionTypes from \"../../actions\";\n\nconst initialState = {\n  counter: 0\n};\n\nconst counterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      return {\n        ...state,\n        counter: state.counter + 1\n      };\n    case actionTypes.DECREMENT:\n      return {\n        ...state,\n        counter: state.counter - 1\n      };\n    case actionTypes.ADD:\n      return {\n        ...state,\n        counter: state.counter + action.value\n      };\n    case actionTypes.REMOVE:\n      return {\n        ...state,\n        counter: state.counter - action.value\n      };\n    case actionTypes.RESET:\n      return {\n        ...state,\n        counter: 0\n      };\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default counterReducer;\n","/* eslint-disable default-case */\nimport * as actionTypes from \"../../actions\";\n\nconst initialState = {\n  results: []\n};\n\nconst resultsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      return {\n        ...state,\n        results: state.results.concat({ id: new Date(), value: action.result })\n      };\n    case actionTypes.DELETE_RESULT:\n      return {\n        ...state,\n        results: state.results.filter(\n          result => result.id !== action.resultElementId\n        )\n      };\n  }\n  return state;\n};\n\nexport default resultsReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, combineReducers } from \"redux\";\nimport counterReducer from \"./store/reducers/counter\";\nimport resultsReducer from \"./store/reducers/results\";\nimport { Provider } from \"react-redux\";\n\nconst rootReducer = combineReducers({\n  ctr: counterReducer,\n  res: resultsReducer\n});\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}